spring.application.name=progetto-finale-corso-epicode

#dati per databese postgres

spring.jpa.hibernate.ddl-auto=update
spring.sql.init.mode=always
spring.datasource.driverClassName=org.postgresql.Driver
spring.datasource.url=${DB_URL}
spring.datasource.username=${DB_USER}
spring.datasource.password=${DB_PASSWORD}

#dati per il cloudinary

cloudinary.cloud_name=${CL_NAME}
cloudinary.api_key=${CL_KEY}
cloudinary.api_secret=${CL_SECRET}

#dati per l'invio di email

spring.mail.host=smtp.gmail.com
spring.mail.port=587
spring.mail.username=${MAIL_USER}
spring.mail.password=${MAIL_PWD}
spring.mail.protocol=smtp
spring.mail.properties.mail.smtp.auth=true
spring.mail.properties.mail.smtp.starttls.enable=true
spring.mail.properties.mail.smtp.starttls.required=true
spring.mail.properties.mail.smtp.connectiontimeout=5000
spring.mail.properties.mail.smtp.timeout=5000
spring.mail.properties.mail.smtp.writetimeout=5000

#valori per le classi per inoltrare via email

messages.new.viaggio.to=leoriganelli1@gmail.com
messages.new.viaggio.subject=Registrazione viaggio
messages.new.viaggio.body=Salvataggio effettuato con successo

spring.messages.basename=messages
spring.messages.encoding=UTF-8

#valori per il jwt ovvero il token e la durata in millesecondi
#assicurarsi che la chiave JWT sia lunga almeno 256 bit (32 caratteri)

jwt.secret=${jwt_s}
jwt.expiration=${jwt_e}




logging.level.root=info
logging.level.class_with_package=INFO
spring.output.ansi.enabled=always
logging.pattern.console=%d{yyyy-MM-dd HH:mm:ss} %clr(%-5level){faint} [%thread] %clr(%logger{36}){cyan} - %clr(%msg){green}%n